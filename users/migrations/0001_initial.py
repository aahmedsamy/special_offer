# Generated by Django 2.2 on 2019-07-26 22:56

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import users.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('offers', '0001_initial'),
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='Publisher',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('holidays', models.CharField(blank=True, max_length=256, null=True, verbose_name='Holidays')),
                ('name', models.CharField(max_length=255, verbose_name='Publisher name')),
                ('phone', models.CharField(max_length=20, unique=True, verbose_name='Phone')),
                ('image', models.ImageField(upload_to='users/images', verbose_name='Image')),
                ('address_url', models.URLField(max_length=256, null=True, verbose_name='Address URL')),
                ('website_url', models.URLField(max_length=256, null=True, verbose_name='Website URL')),
                ('facebook_url', models.URLField(max_length=256, null=True, verbose_name='Facebook URL')),
                ('twitter_url', models.URLField(max_length=256, null=True, verbose_name='Twitter URL')),
                ('instgram_url', models.URLField(max_length=256, null=True, verbose_name='Instgram URL')),
                ('trading_doc', models.ImageField(upload_to='images/docs', verbose_name='Trading document')),
                ('work_start_at', models.TimeField(verbose_name='Work starts at')),
                ('work_end_at', models.TimeField(verbose_name='Work ends at')),
                ('phone_verification_code', models.CharField(blank=True, max_length=6, null=True)),
                ('phone_verified', models.BooleanField(default=False, verbose_name='Verified')),
            ],
            options={
                'verbose_name': 'Publisher',
                'verbose_name_plural': 'Publishers',
            },
        ),
        migrations.CreateModel(
            name='Searcher',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Searcher name')),
            ],
            options={
                'verbose_name': 'Searcher',
                'verbose_name_plural': 'Searchers',
            },
        ),
        migrations.CreateModel(
            name='SearcherNotification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(max_length=50, verbose_name='Status')),
                ('discount', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='discount_searcher_notifications', to='offers.Discount', verbose_name='Discount')),
                ('offer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='offer_searcher_notifications', to='offers.Offer', verbose_name='Offer')),
                ('searcher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='searcher_notifications', to='users.Searcher', verbose_name='Searcher')),
            ],
            options={
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='AdvertiserNotification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(max_length=50, verbose_name='Status')),
                ('advertiser', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='advertiser_notifications', to='users.Publisher', verbose_name='Advertiser')),
                ('discount', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='discount_advertiser_notifications', to='offers.Discount', verbose_name='Discount')),
                ('offer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='offer_advertiser_notifications', to='offers.Offer', verbose_name='Offer')),
                ('story', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='story_advertiser_notifications', to='offers.Story')),
            ],
            options={
                'verbose_name': 'AdvertiserNotification',
                'verbose_name_plural': 'AdvertiserNotifications',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Email address')),
                ('verification_code', models.CharField(blank=True, max_length=6, null=True)),
                ('verified', models.BooleanField(default=False, verbose_name='Verified')),
                ('pass_reset_code', models.CharField(blank=True, max_length=7, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('publisher', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='publisher', to='users.Publisher')),
                ('searcher', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='searcher', to='users.Searcher')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
            },
            managers=[
                ('objects', users.managers.UserManager()),
            ],
        ),
    ]
